{"version":3,"sources":["store/reducers/activeCities.js","store/actions/actionTypes.js","store/reducers/isSuggestionListActive.js","store/reducers/requestStatus.js","store/reducers/index.js","store/actions/index.js","constants.js","config.js","helpers.js","cityList.js","components/DisplayMessage/DisplayMessage.js","components/SuggestedCityList/SuggestedCityList.js","endpoint/httpMethods.js","endpoint/index.js","components/Search/Search.js","components/UIState/UIState.js","components/Card/Card.js","components/DisplayActiveCities/DisplayActiveCities.js","components/App/App.js","index.js"],"names":["activeCities","state","action","type","payload","cityDetails","filter","city","id","cityId","isSuggestionListActive","flag","initialState","inProgress","failure","requestStatus","combineReducers","showSuggestionList","UNITS","units","header","notifications","heading","text","cityActive","findIndex","cityList","name","country","coord","lon","lat","DisplayMessage","message","condition","SuggestedCityList","addCity","filteredList","isOpen","className","map","item","index","key","onClick","get","url","a","async","result","data","statusCode","fetch","method","headers","response","json","getWeatherEndpoint","locationId","httpMethods","Search","props","userInput","onChange","e","currentTarget","value","toLowerCase","includes","setState","openDropdown","event","stopPropagation","requestWeatherDetails","requestInProgress","requestFailure","addNewCity","this","title","placeholder","onFocus","length","Component","mapDispatchToProps","connect","UIState","Card","removeCity","main","temp_min","temp_max","error","noCityAdded","sort","cityA","cityB","sortCities","renderCities","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf5b5551.chunk.js","sourcesContent":["import { ADD_CITY, REMOVE_CITY } from \"../actions/actionTypes\";\n\nconst activeCities = (state = [], action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ADD_CITY: {\n      return [...state, payload.cityDetails];\n    }\n    case REMOVE_CITY: {\n      return state.filter(city => city.id !== payload.cityId);\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default activeCities;\n","export const ADD_CITY = \"ADD_CITY\";\nexport const REMOVE_CITY = \"REMOVE_CITY\";\nexport const SHOW_SUGGESTION_LIST = \"SHOW_SUGGESTION_LIST\";\nexport const REQUEST_IN_PROGRESS = \"REQUEST_IN_PROGRESS\";\nexport const REQUEST_FAILURE = \"REQUEST_FAILURE\";\n","import { SHOW_SUGGESTION_LIST } from \"../actions/actionTypes\";\n\nconst isSuggestionListActive = (state = false, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SHOW_SUGGESTION_LIST: {\n      return payload.flag;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default isSuggestionListActive;\n","import { REQUEST_IN_PROGRESS, REQUEST_FAILURE } from \"../actions/actionTypes\";\n\nconst initialState = {\n  inProgress: false,\n  failure: false\n};\n\nconst requestStatus = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case REQUEST_IN_PROGRESS:\n      return { ...state, inProgress: payload.flag };\n    case REQUEST_FAILURE:\n      return { ...state, failure: payload.flag };\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default requestStatus;\n","import { combineReducers } from \"redux\";\nimport activeCities from \"./activeCities\";\nimport isSuggestionListActive from \"./isSuggestionListActive\";\nimport requestStatus from \"./requestStatus\";\n\nexport default combineReducers({\n  activeCities,\n  isSuggestionListActive,\n  requestStatus\n});\n","import {\n  ADD_CITY,\n  REMOVE_CITY,\n  SHOW_SUGGESTION_LIST,\n  REQUEST_IN_PROGRESS,\n  REQUEST_FAILURE\n} from \"./actionTypes\";\n\nexport const addCity = cityDetails => ({\n  type: ADD_CITY,\n  payload: {\n    cityDetails\n  }\n});\n\nexport const removeCity = cityId => ({\n  type: REMOVE_CITY,\n  payload: {\n    cityId\n  }\n});\n\nexport const showSuggestionList = flag => ({\n  type: SHOW_SUGGESTION_LIST,\n  payload: {\n    flag\n  }\n});\n\nexport const requestInProgress = flag => ({\n  type: REQUEST_IN_PROGRESS,\n  payload: {\n    flag\n  }\n});\n\nexport const requestFailure = flag => ({\n  type: REQUEST_FAILURE,\n  payload: {\n    flag\n  }\n});\n","export const UNITS = {\n  METRIC: \"metric\",\n  IMPERIAL: \"imperial\"\n};\n","import { UNITS } from \"./constants\";\n\nexport const units = UNITS.METRIC;\nexport const header = \"Weather Monster\";\nexport const searchPlaceholderText = \"Enter city name here\";\nexport const notifications = {\n  loadingText: \"Loading...\",\n  noMatchesFound: \"No matches found.\",\n  noCityAdded: {\n    heading: \"No cities added\",\n    text: \"Search and add cities from above.\"\n  },\n  error: {\n    heading: \"An error occurred\",\n    text: \"Please check browser console for more details.\"\n  }\n};\n","export const cityActive = (activeCities, cityId) => {\n  if (activeCities.findIndex(city => city.id === cityId) === -1) {\n    return false;\n  }\n  return true;\n};\n\nexport const sortCities = activeCities =>\n  activeCities.sort(\n    (cityA, cityB) => cityB.main.temp_max - cityA.main.temp_max\n  );\n","const cityList = [\n  {\n    id: 2643743,\n    name: \"London\",\n    country: \"GB\",\n    coord: {\n      lon: -0.12574,\n      lat: 51.50853\n    }\n  },\n  {\n    id: 2655603,\n    name: \"Birmingham\",\n    country: \"GB\",\n    coord: {\n      lon: -1.89983,\n      lat: 52.481419\n    }\n  },\n  {\n    id: 5128638,\n    name: \"New York\",\n    country: \"US\",\n    coord: {\n      lon: -75.499901,\n      lat: 43.000351\n    }\n  },\n  {\n    id: 1278710,\n    name: \"Amritsar\",\n    country: \"IN\",\n    coord: {\n      lon: 74.865562,\n      lat: 31.63306\n    }\n  },\n  {\n    id: 2950158,\n    name: \"Berlin\",\n    country: \"DE\",\n    coord: {\n      lon: 10.45,\n      lat: 54.033329\n    }\n  },\n  {\n    id: 1261481,\n    name: \"New Delhi\",\n    country: \"IN\",\n    coord: {\n      lon: 77.23114,\n      lat: 28.61282\n    }\n  },\n  {\n    id: 292223,\n    name: \"Dubai\",\n    country: \"AE\",\n    coord: {\n      lon: 55.304722,\n      lat: 25.258169\n    }\n  },\n  {\n    id: 184745,\n    name: \"Nairobi\",\n    country: \"KE\",\n    coord: {\n      lon: 36.816669,\n      lat: -1.28333\n    }\n  },\n  {\n    id: 1850147,\n    name: \"Tokyo\",\n    country: \"JP\",\n    coord: {\n      lon: 139.691711,\n      lat: 35.689499\n    }\n  },\n  {\n    id: 524901,\n    name: \"Moscow\",\n    country: \"RU\",\n    coord: {\n      lon: 37.615555,\n      lat: 55.75222\n    }\n  },\n  {\n    id: 2147714,\n    name: \"Sydney\",\n    country: \"AU\",\n    coord: {\n      lon: 151.207321,\n      lat: -33.867851\n    }\n  },\n  {\n    id: 2192362,\n    name: \"Christchurch\",\n    country: \"NZ\",\n    coord: {\n      lon: 172.633331,\n      lat: -43.533329\n    }\n  },\n  {\n    id: 2179537,\n    name: \"Wellington\",\n    country: \"NZ\",\n    coord: {\n      lon: 174.775574,\n      lat: -41.28664\n    }\n  },\n  {\n    id: 2193733,\n    name: \"Auckland\",\n    country: \"NZ\",\n    coord: {\n      lon: 174.766663,\n      lat: -36.866669\n    }\n  },\n  {\n    id: 292672,\n    name: \"Sharjah\",\n    country: \"AE\",\n    coord: {\n      lon: 55.403301,\n      lat: 25.357309\n    }\n  },\n  {\n    id: 6691135,\n    name: \"Al Ghuwair\",\n    country: \"AE\",\n    coord: {\n      lon: 55.391911,\n      lat: 25.35985\n    }\n  },\n  {\n    id: 2911298,\n    name: \"Hamburg\",\n    country: \"DE\",\n    coord: {\n      lon: 10,\n      lat: 53.549999\n    }\n  },\n  {\n    id: 5391959,\n    name: \"San Francisco\",\n    country: \"US\",\n    coord: {\n      lon: -122.419418,\n      lat: 37.774929\n    }\n  },\n  {\n    id: 5392171,\n    name: \"San Jose\",\n    country: \"US\",\n    coord: {\n      lon: -121.894958,\n      lat: 37.33939\n    }\n  },\n  {\n    id: 5392281,\n    name: \"San Lorenzo\",\n    country: \"US\",\n    coord: {\n      lon: -122.124413,\n      lat: 37.681042\n    }\n  },\n  {\n    id: 5392368,\n    name: \"San Marcos\",\n    country: \"US\",\n    coord: {\n      lon: -117.166138,\n      lat: 33.143372\n    }\n  },\n  {\n    id: 5907364,\n    name: \"Brampton\",\n    country: \"CA\",\n    coord: {\n      lon: -79.766327,\n      lat: 43.683411\n    }\n  },\n  {\n    id: 98182,\n    name: \"Baghdad\",\n    country: \"IQ\",\n    coord: {\n      lon: 44.400879,\n      lat: 33.34058\n    }\n  },\n  {\n    id: 1007311,\n    name: \"Durban\",\n    country: \"ZA\",\n    coord: {\n      lon: 31.0292,\n      lat: -29.857901\n    }\n  },\n  {\n    id: 3369157,\n    name: \"Cape Town\",\n    country: \"ZA\",\n    coord: {\n      lon: 18.42322,\n      lat: -33.925838\n    }\n  },\n  {\n    id: 186301,\n    name: \"Mombasa\",\n    country: \"KE\",\n    coord: {\n      lon: 39.663589,\n      lat: -4.05466\n    }\n  },\n  {\n    id: 108410,\n    name: \"Riyadh\",\n    country: \"SA\",\n    coord: {\n      lon: 46.721851,\n      lat: 24.687731\n    }\n  }\n];\n\nexport default cityList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst DisplayMessage = ({ message, condition }) =>\n  condition ? <p>{message}</p> : \"\";\n\nDisplayMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  condition: PropTypes.bool.isRequired\n};\n\nexport default DisplayMessage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\n\nexport const SuggestedCityList = ({ addCity, filteredList, isOpen }) => {\n  if (!isOpen) {\n    return null;\n  }\n  return (\n    <section className=\"suggested-city-list\">\n      {filteredList.map((item, index) => (\n        <div\n          className=\"suggested-city-list-item\"\n          key={index}\n          onClick={() => addCity(item)}\n        >\n          {item.name}\n        </div>\n      ))}\n    </section>\n  );\n};\n\nSuggestedCityList.propTypes = {\n  addCity: PropTypes.func.isRequired,\n  filteredList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default SuggestedCityList;\n","// Common function to make GET requests\nexport const get = async url => {\n  const result = {\n    data: {},\n    statusCode: null\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    result.data = await response.json();\n    result.statusCode = 200;\n    return result;\n  } catch (error) {\n    result.statusCode = 500;\n    return result;\n  }\n};\n","import { units } from \"../config\";\nimport * as httpMethods from \"./httpMethods\";\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com\";\nconst API_URL = \"http://api.openweathermap.org/data/2.5/weather?id=\";\nconst KEY = \"a8769f8dbcec1ba81683a2151cacb6b1\";\n\nexport const getWeatherEndpoint = async locationId => {\n  const url = `${CORS_PROXY}/${API_URL}${locationId}&units=${units}&APPID=${KEY}`;\n  return await httpMethods.get(url);\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  addCity,\n  showSuggestionList,\n  requestInProgress,\n  requestFailure\n} from \"../../store/actions\";\nimport { cityActive } from \"../../helpers\";\nimport cityList from \"../../cityList\";\nimport DisplayMessage from \"../DisplayMessage\";\nimport SuggestedCityList from \"../SuggestedCityList\";\nimport { searchPlaceholderText, notifications } from \"../../config\";\nimport { getWeatherEndpoint } from \"../../endpoint\";\nimport \"./styles.scss\";\n\nexport class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  initialState = {\n    userInput: \"\",\n    filteredList: cityList\n  };\n\n  onChange = e => {\n    const { showSuggestionList } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredList = cityList.filter(item =>\n      item.name.toLowerCase().includes(userInput.toLowerCase())\n    );\n    this.setState({\n      userInput,\n      filteredList\n    });\n    showSuggestionList(true);\n  };\n\n  openDropdown = event => {\n    event.stopPropagation();\n    this.props.showSuggestionList(true);\n  };\n\n  requestWeatherDetails = async cityId => {\n    const { addCity, requestInProgress, requestFailure } = this.props;\n    requestInProgress(true);\n    const response = await getWeatherEndpoint(cityId);\n    if (response.statusCode === 500) {\n      requestInProgress(false);\n      requestFailure(true);\n      return;\n    }\n    addCity(response.data);\n    requestInProgress(false);\n  };\n\n  addNewCity = cityDetails => {\n    const { activeCities, showSuggestionList } = this.props;\n    showSuggestionList(false);\n    if (cityActive(activeCities, cityDetails.id)) {\n      return;\n    }\n    this.requestWeatherDetails(cityDetails.id);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { userInput, filteredList } = this.state;\n    const { isSuggestionListActive, requestStatus, activeCities } = this.props;\n    return (\n      <section>\n        <input\n          title={searchPlaceholderText}\n          type=\"search\"\n          value={userInput}\n          className=\"city-input-field\"\n          placeholder={searchPlaceholderText}\n          onChange={this.onChange}\n          onClick={event => this.openDropdown(event)}\n          onFocus={event => this.openDropdown(event)}\n        />\n        {filteredList && filteredList.length > 0 ? (\n          <SuggestedCityList\n            filteredList={filteredList}\n            addCity={this.addNewCity}\n            isOpen={isSuggestionListActive}\n            activeCities={activeCities}\n          ></SuggestedCityList>\n        ) : (\n          <DisplayMessage\n            condition={true}\n            message={notifications.noMatchesFound}\n          ></DisplayMessage>\n        )}\n        <DisplayMessage\n          condition={requestStatus.inProgress}\n          message={notifications.loadingText}\n        ></DisplayMessage>\n      </section>\n    );\n  }\n}\n\nSearch.propTypes = {\n  addCity: PropTypes.func.isRequired,\n  requestFailure: PropTypes.func.isRequired,\n  requestInProgress: PropTypes.func.isRequired,\n  showSuggestionList: PropTypes.func.isRequired,\n  isSuggestionListActive: PropTypes.bool.isRequired,\n  requestStatus: PropTypes.objectOf(PropTypes.bool).isRequired\n};\n\nconst mapStateToProps = ({\n  activeCities,\n  requestStatus,\n  isSuggestionListActive\n}) => ({\n  activeCities,\n  requestStatus,\n  isSuggestionListActive\n});\nconst mapDispatchToProps = {\n  addCity,\n  requestInProgress,\n  requestFailure,\n  showSuggestionList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from \"react\";\nimport \"./styles.scss\";\n\nconst UIState = ({ heading, text }) => {\n  return (\n    <section className=\"ui-state-indicator\">\n      <h3>{heading}</h3>\n      <div>{text}</div>\n    </section>\n  );\n};\n\nexport default UIState;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { units } from \"../../config\";\nimport { UNITS } from \"../../constants\";\nimport \"./styles.scss\";\n\nconst Card = ({ city, removeCity }) => {\n  return (\n    <article\n      className=\"card\"\n      onClick={() => removeCity(city.id)}\n      title=\"Click to remove this city\"\n    >\n      <strong>{city.name}</strong>\n      <div>\n        <span className=\"min-temp-label\">Min</span> {city.main.temp_min}\n        &deg;{units === UNITS.METRIC ? \"C\" : \"F\"}\n      </div>\n      <div>\n        <span className=\"max-temp-label\">Max</span> {city.main.temp_max}\n        &deg;{units === UNITS.METRIC ? \"C\" : \"F\"}\n      </div>\n    </article>\n  );\n};\n\nCard.propTypes = {\n  city: PropTypes.object.isRequired,\n  removeCity: PropTypes.func.isRequired\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { removeCity } from \"../../store/actions\";\nimport UIState from \"../UIState\";\nimport Card from \"../Card\";\nimport { sortCities } from \"../../helpers\";\nimport { notifications } from \"../../config\";\nimport \"./styles.scss\";\n\nconst renderCities = (activeCities, removeCity, requestStatus) => {\n  const { noCityAdded } = notifications;\n  return activeCities && activeCities.length > 0 ? (\n    sortCities(activeCities).map((city, index) => (\n      <Card key={index} city={city} removeCity={removeCity}></Card>\n    ))\n  ) : requestStatus.inProgress ? (\n    \"\"\n  ) : (\n    <UIState {...noCityAdded}></UIState>\n  );\n};\n\nexport const DisplayActiveCities = ({\n  requestStatus,\n  activeCities,\n  removeCity\n}) => {\n  const { error } = notifications;\n  return (\n    <section className=\"active-city-card-wrapper\">\n      <section className=\"active-city-list\">\n        {requestStatus.failure ? (\n          <UIState {...error}></UIState>\n        ) : (\n          renderCities(activeCities, removeCity, requestStatus)\n        )}\n      </section>\n    </section>\n  );\n};\n\nDisplayActiveCities.propTypes = {\n  removeCity: PropTypes.func.isRequired,\n  activeCities: PropTypes.arrayOf(PropTypes.object).isRequired,\n  requestStatus: PropTypes.objectOf(PropTypes.bool).isRequired\n};\n\nconst mapStateToProps = ({ activeCities, requestStatus }) => ({\n  activeCities,\n  requestStatus\n});\nconst mapDispatchToProps = { removeCity };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayActiveCities);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { showSuggestionList } from \"../../store/actions\";\nimport { header } from \"../../config\";\nimport Search from \"../Search\";\nimport DisplayActiveCities from \"../DisplayActiveCities\";\nimport \"./App.scss\";\n\nApp.propTypes = {\n  showSuggestionList: PropTypes.func.isRequired\n};\n\nexport function App({ showSuggestionList }) {\n  return (\n    <div className=\"app-container\" onClick={() => showSuggestionList(false)}>\n      <header>\n        <h1>{header}</h1>\n      </header>\n      <Search />\n      <DisplayActiveCities />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = { showSuggestionList };\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}